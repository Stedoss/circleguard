name: Create draft release

on: 
  workflow_dispatch:
    inputs:
      version:
        description: Version tag to upload this release under (eg v2.15.0)

jobs:
  build_win_x64:
    runs-on: windows-latest
    name: Windows x64 Build
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: "3.10.9"
        architecture: "x64"

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Install build dependencies
      run: |
        pip install -r requirements_build.txt

    - name: Build x64
      run: |
        pyinstaller gui_win_x64.spec --noconfirm

    - name: Build x64_debug
      run: |
        pyinstaller gui_win_x64_debug.spec --noconfirm

    - name: Upload win-x64 Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Circleguard win-x64
        path: dist/Circleguard_win_x64/

    - name: Upload win-x64-debug Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Circleguard win-x64-debug
        path: dist/Circleguard_win_x64_debug/

    - name: Update Release
      uses: ncipollo/release-action@v1.6.1
      with:
        artifacts: "dist/*.zip"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: true
        allowUpdates: true
        tag: ${{ github.event.inputs.version }}

  build_win_x86:
    # qt 6 doesn't provide prebuilt 32 bit binaries anymore. I'm not dealing with building qt from source right
    # now, so I'm dropping support for 32 bit for now. Will direct users to v2.15.5, the last version to support 
    # 32 bit (and the last version to use PyQt5).
    # https://forum.qt.io/topic/123609/why-is-there-no-32-bit-mingw-in-qt6-0-1/4
    if: ${{ false }}
    runs-on: windows-latest
    name: Windows x86 Build
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: "3.10.9"
        architecture: "x86"

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Install build dependencies
      run: |
        pip install -r requirements_build.txt

    - name: Build x86
      run: |
        pyinstaller gui_win_x86.spec --noconfirm

    - name: Upload win-x86 Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Circleguard win-x86
        path: dist/Circleguard_win_x86/

    - name: Update Release
      uses: ncipollo/release-action@v1.6.1
      with:
        artifacts: "dist/*.zip"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: true
        allowUpdates: true
        tag: ${{ github.event.inputs.version }}

  build_mac:
    runs-on: macos-11
    name: Mac Build
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.9
        architecture: "x64"

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Install build dependencies
      run: |
        pip install -r requirements_build.txt

    - name: Build
      run: |
        pyinstaller gui_mac.spec --noconfirm

    - name: Upload mac Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Circleguard osx
        path: dist/Circleguard.app


    - name: Update Release
      uses: ncipollo/release-action@v1.6.1
      with:
        artifacts: "dist/*.zip"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: true
        allowUpdates: true
        tag: ${{ github.event.inputs.version }}
